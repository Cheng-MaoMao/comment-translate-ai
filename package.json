{
  "name": "deepl-translate",
  "displayName": "deepl-translate",
  "description": "deepl translate source for comment-translate",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.63.0"
  },
  "categories": [
    "Other"
  ],
  "homepage": "https://github.com/intellism/deepl-translate#readme",
    "bugs": {
        "url": "https://github.com/intellism/deepl-translate/issues"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/intellism/deepl-translate.git"
    },
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": [
      {
        "title": "DeepL translate Configuration",
        "type": "Object",
        "properties": {
          "deeplTranslate.apiFree": {
            "type": "boolean",
            "description": "apiFree",
            "default": true
          },
          "deeplTranslate.authKey": {
            "type": "string",
            "markdownDescription": "You need an authentication key to access to the API.[Accessing the API](https://www.deepl.com/zh/docs-api/accessing-the-api/)"
          },
          "deeplTranslate.preserveFormatting": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ],
            "default": "0",
            "markdownDescription": "Sets whether the translation engine should respect the original formatting, even if it would usually correct some aspects. [More](https://www.deepl.com/zh/docs-api/translating-text/request/)"
          },
          "deeplTranslate.formality": {
            "type": "string",
            "enum": [
              "default",
              "more",
              "less"
            ],
            "default": "default",
            "markdownDescription": "Sets whether the translated text should lean towards formal or informal language. [More](https://www.deepl.com/zh/docs-api/translating-text/request/)"
          }
        }
      }
    ],
    "translates": [
      {
        "translate": "deepl",
        "title": "DeepL translate"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@types/vscode": "^1.63.0",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "@vscode/test-electron": "^1.6.2",
    "eslint": "^8.1.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.3",
    "typescript": "^4.4.4"
  },
  "dependencies": {
    "axios": "0.21.4",
    "comment-translate-manager": "^0.0.2",
    "querystring": "^0.2.1"
  }
}